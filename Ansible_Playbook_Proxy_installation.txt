---
- hosts: Proxy
  gather_facts: no
  tasks:
   - name: install git
     yum:
       name: git
       state: present
   - name: install wget
     yum:
       name: wget
       state: present
   - name: install openssl list
     yum:
         name: 
             - gcc
             - openssl
             - openssl-devel
             - systemd-devel
         state: present
   - name: create /HAproxy directory
     ansible.builtin.file:
         path: /HAproxy
         state: directory
         mode: '0755'
   - name: create /etc/haproxy directory
     ansible.builtin.file:
         path: /etc/haproxy
         state: directory
         mode: '0755'
   - name: create /etc/haproxy/certs directory
     ansible.builtin.file:
         path: /etc/haproxy/certs
         state: directory
         mode: '0755'
   - name: create /etc/haproxy/errors directory
     ansible.builtin.file:
         path: /etc/haproxy/errors
         state: directory
         mode: '0755'
   - name: create /var/log/haproxy directory
     ansible.builtin.file:
         path: /etc/haproxy
         state: directory
         mode: '0755'
   - name: unarchive haproxy.tar.gz
     ansible.builtin.unarchive:
       src: /root/backup/Proxy/haproxy-2.3.10.tar.gz
       dest: /HAproxy/
   - name: openssl.sh copy
     ansible.builtin.copy:
       src: /root/backup/Proxy/openssl.sh
       dest: /root/
   - name: mode 744 for openssl.sh
     file:
       path: "/root/openssl.sh"
       mode: 0744
   - name: Run openssl.sh
     shell: /root/openssl.sh
   - name: haproxy.service remove
     file: path=/etc/systemd/system/haproxy.service state=absent
   - name: haproxy.service copy
     ansible.builtin.copy: 
       src: /root/backup/Proxy/haproxy.service
       dest: /etc/systemd/system/haproxy.service
   - name: http errors copy
     ansible.builtin.copy: 
       src: /root/backup/Proxy/{{ item }}
       dest: /etc/haproxy/errors/  
     with_items:
     - 400.http
     - 403.http
     - 408.http
     - 500.http
     - 502.http
     - 503.http
     - 504.http
   - name: Add the user 'haproxy' 
     ansible.builtin.user:
       name: haproxy
       shell: /sbin/nologin
   - name: rsyslog.d/haproxy.conf remove
     file: path=/etc/rsyslog.d/haproxy.conf  state=absent
   - name: /etc/rsyslog.d/haproxy.conf copy
     ansible.builtin.copy: 
       src: /root/backup/Proxy/haproxy.conf 
       dest: /etc/rsyslog.d/haproxy.conf     
   - name: /etc/logrotate.d/haproxy copy
     ansible.builtin.copy: 
       src: /root/backup/Proxy/haproxy
       dest: /etc/logrotate.d/haproxy
   - name: /etc/haproxy/haproxy.cfg copy
     ansible.builtin.copy: 
       src: /root/backup/Proxy/haproxy.cfg
       dest: /etc/haproxy/haproxy.cfg
   - name: Firewall Policy ADD
     ansible.posix.firewalld:
      service: http
      permanent: yes
      state: enabled
   - name: Firewall Policy ADD
     ansible.posix.firewalld:
      port: 9000/tcp
      permanent: yes
      state: enabled  
   - name: Firewall Policy ADD
     ansible.posix.firewalld:
       port: 514/udp
       permanent: yes
       state: enabled
   - name: Firewall reload
     shell: firewall-cmd --reload
   - name: ssl_key.sh copy
     ansible.builtin.copy:
       src: /root/backup/Proxy/ssl_key.sh
       dest: /root/
   - name: mode 744 for ssl_key.sh
     ansible.builtin.file:
       path: /root/ssl_key.sh
       owner: root
       group: root
       mode: '0744'
   - name: Run script file
     shell: /root/ssl_key.sh
   - name: Firewall Policy ADD
     ansible.posix.firewalld:
        service: https
        permanent: yes
        state: enabled
   - name: Firewall Reload
     shell: firewall-cmd --reload
   - name: restart service haproxy
     ansible.builtin.systemd:
       state: restarted
       daemon_reload: yes
       name: haproxy
   - name: Enable service haproxy, and not touch the state
     ansible.builtin.service:
       name: haproxy
       enabled: yes
   - name: install keepalived
     yum: name=keepalived state=present
   - name: sysctl.conf remove
     file: path=/etc/sysctl.conf state=absent
   - name: sysctl.conf copy
     copy:
       src: /root/backup/Proxy/sysctl.conf
       dest: /etc/sysctl.conf
   - name: keepalived.conf remove
     file: path=/etc/keepalived/keepalived.conf state=absent
   - name: keepalived.conf copy
     copy:
       src: /root/backup/Proxy/keepalived.conf
       dest: /etc/keepalived/keepalived.conf
   - name: firewall_cmd.sh copy
     ansible.builtin.copy:
       src: /root/backup/Proxy/firewall_cmd.sh
       dest: /root/
   - name: mode 744 for firewall_cmd.sh
     ansible.builtin.file:
       path: /root/firewall_cmd.sh
       owner: root
       group: root
       mode: '0744'
   - name: Run script file
     shell: /root/firewall_cmd.sh
   - name: Start service keepalived, if not started
     ansible.builtin.service:
       name: keepalived
       state: started
   - name: Enable service keepalived, and not touch the state
     ansible.builtin.service:
       name: keepalived
       enabled: yes
   - name: cockpit install
     yum: name=cockpit state=present
   - name: Firewall Policy ADD
     ansible.posix.firewalld:
        service: cockpit
        permanent: yes
        state: enabled
   - name: Firewall Reload
     shell: firewall-cmd --reload
   - name: Start service cockpit, if not started
     ansible.builtin.service:
       name: cockpit
       state: started
   - name: Enable service cockpit, and not touch the state
     ansible.builtin.service:
       name: cockpit
       enabled: yes
   - name: Enable service cockpit.socket, and not touch the state
     ansible.builtin.service:
       name: cockpit.socket
       enabled: yes
   - name: copy lynis
     copy: src=/root/backup/lynis_install.sh dest=~/
   - name: Change permissions lynis
     file: dest=~/lynis_install.sh mode=700
   - name: Run script lynis_install.sh
     shell: ~/lynis_install.sh